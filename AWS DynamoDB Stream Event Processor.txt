AWS DynamoDB Stream Event Processor

AWS CLI pre-configured
Clone the repository
git clone https://github.com/miztiik/dynamodb-streams-processor.git
Customize the deployment
Edit the ./helper_scripts/deploy.sh to update your environment variables.
cd dynamodb-streams-processor
chmod +x ./helper_scripts/deploy.sh
vi ./helper_scripts/deploy.sh (Change the bucket name of the same region)
./helper_scripts/deploy.sh
check the s3 bucket, cloudformation template, Lanbda functions,DynamoDB 
Click on the DynamoDB Trigger function it will tahke lambda functions
Create a item in a table as text and save
Go to lamdba functiona and see the changes in monitoring and go to cloudwatch logs and check

AWS_PROFILE="default"
BUCKET_NAME="migration1010" # bucket must exist in the SAME region the deployment is taking place
SERVICE_NAME="dynamodb-stream-processor"
TEMPLATE_NAME="${SERVICE_NAME}.yaml"
STACK_NAME="${SERVICE_NAME}"
OUTPUT_DIR="./outputs/"
PACKAGED_OUTPUT_TEMPLATE="${OUTPUT_DIR}${STACK_NAME}-packaged-template.yaml"
Deployment
We will use the deploy.sh in the helper_scripts directory to deploy our AWS SAM template


Insert a simple item to the table, either from the GUI/CLI
ddb_name="dynamodb-stream-processor-DynamoDBTable-13FMM414VA8NH"
for i in {1..10}
 do
  val=${RANDOM}
  aws dynamodb put-item \
    --table-name "${ddb_name}" \
    --item '{ "Username": {"S":"User_'${i}'"},"Timestamp": {"S":"'$(date +"%d/%m/%Y-%H:%M:%S")'"},"Message":{"S":"Mystique_Msg_'${val}'"} }'
 done





AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: >
  AWS Lambda trigger to process new items in a stream from a DynamoDB table.

Parameters:
  enableDEBUGGER:
    Description: Do you want to enable logging.
    Default: "False"
    Type: String
    AllowedValues: ["True", "False"]
    ConstraintDescription: Must be boolean.

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: Username
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: S
      KeySchema: 
        - AttributeName: Username
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  DynamoDBStreamProcessor:
    Type: AWS::Serverless::Function
    Properties:
      Description: 'An AWS Lambda trigger to process a stream from a DynamoDB table.'
      Handler: dynamodb-stream-processor.lambda_handler
      Runtime: python3.7
      CodeUri: ./src/dynamodb-stream-processor.py
      Environment:
        Variables:
          ENABLE_DEBUG:
            Ref: enableDEBUGGER
      MemorySize: 128
      Timeout: 3
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt DynamoDBTable.StreamArn
            BatchSize: 3 # How many items we want to process at once
            StartingPosition: TRIM_HORIZON
      Policies:
        - AWSLambdaDynamoDBExecutionRole # Managed Policy